
/*
접근 방식 파악 필요

[실패한 풀이 방향]
1. 종료 시간 + 10분 후 시간 더하기 처리
2. 1번을 배열로 정리 후 for문 한 번에 처리 할 것이라 예상
*/


public class PG3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		String[][] book_time = {{"15:00", "17:00"}, {"16:40", "18:20"}, {"14:20", "15:20"}, {"14:10", "19:20"}, {"18:20", "21:20"}};
		int answer = 0;
		
		
		
		for(int i=0;i<book_time[0].length;i++) {
			for(int j=1;j<book_time[0].length;j++) {
				
				String strIStartTime = book_time[i][0].replaceAll(":", "");
				String strJStartTime = book_time[j][0].replaceAll(":", "");
				
				String[] arrIEndTime = book_time[i][1].split(":");
				String strIEndTimeHour = arrIEndTime[0];
				String strIEndTimeMin = arrIEndTime[1];
				
				int iEndTimeHour = 0;
				int iEndTimeMin = 0;
				
				if(arrIEndTime.equals("50")) {
					iEndTimeHour = Integer.parseInt(strIEndTimeHour) + 10;
				} else {
					iEndTimeMin = Integer.parseInt(strIEndTimeMin) + 10;
				}
				
				int iStartTime = Integer.parseInt(strIStartTime);
				int iEndTime = Integer.parseInt(Integer.toString(iEndTimeHour) + Integer.toString(iEndTimeMin)); 
				
				// 시작시간 + 종료시간이 안에 들어가는지
//				if((book_time[i][0] >= book_time[j][0] && book_time[i][0] <= book_time[j][1]) || (book_time[i][1] >= book_time[j][0] && book_time[i][1] <= book_time[j][1]))
//				{
//					continue;
//				}

				answer++;
			}
		}
	}

}
